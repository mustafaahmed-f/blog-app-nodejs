generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model Account {
  id                String    @id @default(cuid())
  userId            String
  type              String
  provider          String
  providerAccountId String
  refresh_token     String?
  access_token      String?
  expires_at        DateTime?
  token_type        String?
  scope             String?
  id_token          String?
  session_state     String?

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
}

model User {
  id        String    @id @default(cuid())
  createdAt DateTime  @default(now())
  updatedAt DateTime  @default(now())
  firstName String
  lastName  String
  userName  String    @unique
  email     String    @unique
  password  String
  posts     Post[]
  Account   Account[]
  Comment   Comment[]
}

model Post {
  id         String    @id @default(cuid()) @map("_id")
  createdAt  DateTime  @default(now())
  updatedAt  DateTime  @default(now())
  isEdited   Boolean   @default(false)
  slug       String    @unique
  title      String
  desc       String
  img        String?
  views      Int       @default(0)
  categoryId String
  cat        Category  @relation(fields: [categoryId], references: [id])
  userEmail  String
  user       User      @relation(fields: [userEmail], references: [email])
  comments   Comment[]
  tags       Tag[]

  @@unique([userEmail, title])
  @@index([userEmail])
  @@index([categoryId])
}

model Comment {
  id        String   @id @default(cuid()) @map("_id")
  createdAt DateTime @default(now())
  updatedAt DateTime @default(now())
  isEdited  Boolean  @default(false)
  desc      String
  userEmail String
  user      User     @relation(fields: [userEmail], references: [email])
  postSlug  String
  post      Post     @relation(fields: [postSlug], references: [slug])

  @@index([postSlug])
}

model Category {
  id        String   @id @default(cuid())
  createdAt DateTime @default(now())
  updatedAt DateTime @default(now())
  slug      String   @unique
  title     String
  img       String?
  Posts     Post[]
}

model Tag {
  id    String @id @default(cuid()) @map("_id")
  name  String @unique
  posts Post[]
}
